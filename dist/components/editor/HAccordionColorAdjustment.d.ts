import React from "react";
interface Props {
    tempScore: number;
    tintScore: number;
    vibranceScore: number;
    saturationScore: number;
    exposureScore: number;
    HighlightsScore: number;
    shadowsScore: number;
    whitesScore: number;
    blacksScore: number;
    contrastScore: number;
    clarityScore: number;
    sharpnessScore: number;
    expandedPanels: string[];
    setTempScore: (value: number) => void;
    setTintScore: (value: number) => void;
    setExposureScore: (value: number) => void;
    setVibranceScore: (value: number) => void;
    setSaturationScore: (value: number) => void;
    setHighlightsScore: (value: number) => void;
    setShadowsScore: (value: number) => void;
    setWhitesScore: (value: number) => void;
    setBlacksScore: (value: number) => void;
    setContrastScore: (value: number) => void;
    setClarityScore: (value: number) => void;
    setSharpnessScore: (value: number) => void;
    onPanelChange: (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => void;
}
export default function HAccordionColorAdjustment(props: Props): import("react/jsx-runtime").JSX.Element;
export {};
